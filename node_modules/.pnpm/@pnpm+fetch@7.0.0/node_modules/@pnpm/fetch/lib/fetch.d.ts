import { type RetryTimeoutOptions } from '@zkochan/retry';
import { type Request, type RequestInit as NodeRequestInit, Response } from 'node-fetch';
export { isRedirect } from 'node-fetch';
export { Response, type RetryTimeoutOptions };
interface URLLike {
    href: string;
}
export type RequestInfo = string | URLLike | Request;
export interface RequestInit extends NodeRequestInit {
    retry?: RetryTimeoutOptions;
    timeout?: number;
}
export declare function fetch(url: RequestInfo, opts?: RequestInit): Promise<Response>;
export declare class ResponseError extends Error {
    res: Response;
    code: number;
    status: number;
    statusCode: number;
    url: string;
    constructor(res: Response);
}
