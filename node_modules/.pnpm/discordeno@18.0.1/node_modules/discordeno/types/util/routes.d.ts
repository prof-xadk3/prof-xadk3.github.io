import { GetBans, GetGuildAuditLog, GetGuildPruneCountQuery, GetInvite, GetMessagesOptions, GetReactions, GetScheduledEventUsers, ListArchivedThreads, ListGuildMembers } from "../helpers/mod.js";
import { BigString } from "../types/shared.js";
export declare const routes: {
    GATEWAY_BOT: () => string;
    AUTOMOD_RULES: (guildId: BigString) => string;
    AUTOMOD_RULE: (guildId: BigString, ruleId: BigString) => string;
    CHANNEL: (channelId: BigString) => string;
    CHANNEL_MESSAGE: (channelId: BigString, messageId: BigString) => string;
    CHANNEL_MESSAGES: (channelId: BigString, options?: GetMessagesOptions) => string;
    CHANNEL_PIN: (channelId: BigString, messageId: BigString) => string;
    CHANNEL_PINS: (channelId: BigString) => string;
    CHANNEL_BULK_DELETE: (channelId: BigString) => string;
    CHANNEL_INVITES: (channelId: BigString) => string;
    CHANNEL_WEBHOOKS: (channelId: BigString) => string;
    CHANNEL_MESSAGE_REACTION_ME: (channelId: BigString, messageId: BigString, emoji: string) => string;
    CHANNEL_MESSAGE_REACTION_USER: (channelId: BigString, messageId: BigString, emoji: string, userId: BigString) => string;
    CHANNEL_MESSAGE_REACTIONS: (channelId: BigString, messageId: BigString) => string;
    CHANNEL_MESSAGE_REACTION: (channelId: BigString, messageId: BigString, emoji: string, options?: GetReactions) => string;
    CHANNEL_FOLLOW: (channelId: BigString) => string;
    CHANNEL_MESSAGE_CROSSPOST: (channelId: BigString, messageId: BigString) => string;
    CHANNEL_OVERWRITE: (channelId: BigString, overwriteId: BigString) => string;
    CHANNEL_TYPING: (channelId: BigString) => string;
    THREAD_START_PUBLIC: (channelId: BigString, messageId: BigString) => string;
    THREAD_START_PRIVATE: (channelId: BigString) => string;
    THREAD_ACTIVE: (guildId: BigString) => string;
    THREAD_MEMBERS: (channelId: BigString) => string;
    THREAD_ME: (channelId: BigString) => string;
    THREAD_USER: (channelId: BigString, userId: BigString) => string;
    THREAD_ARCHIVED: (channelId: BigString) => string;
    THREAD_ARCHIVED_PUBLIC: (channelId: BigString, options?: ListArchivedThreads) => string;
    THREAD_ARCHIVED_PRIVATE: (channelId: BigString, options?: ListArchivedThreads) => string;
    THREAD_ARCHIVED_PRIVATE_JOINED: (channelId: BigString, options?: ListArchivedThreads) => string;
    FORUM_START: (channelId: BigString) => string;
    GUILD: (guildId: BigString, withCounts?: boolean) => string;
    GUILDS: () => string;
    GUILD_AUDIT_LOGS: (guildId: BigString, options?: GetGuildAuditLog) => string;
    GUILD_BAN: (guildId: BigString, userId: BigString) => string;
    GUILD_BANS: (guildId: BigString, options?: GetBans) => string;
    GUILD_BANNER: (guildId: BigString, icon: string) => string;
    GUILD_CHANNELS: (guildId: BigString) => string;
    GUILD_WIDGET: (guildId: BigString) => string;
    GUILD_WIDGET_JSON: (guildId: BigString) => string;
    GUILD_WIDGET_IMAGE: (guildId: BigString, style?: "shield" | "banner1" | "banner2" | "banner3" | "banner4") => string;
    GUILD_EMOJI: (guildId: BigString, emojiId: BigString) => string;
    GUILD_EMOJIS: (guildId: BigString) => string;
    GUILD_ICON: (guildId: BigString, icon: string) => string;
    GUILD_INTEGRATION: (guildId: BigString, integrationId: BigString) => string;
    GUILD_INTEGRATION_SYNC: (guildId: BigString, integrationId: BigString) => string;
    GUILD_INTEGRATIONS: (guildId: BigString) => string;
    GUILD_INVITES: (guildId: BigString) => string;
    GUILD_LEAVE: (guildId: BigString) => string;
    GUILD_MEMBER: (guildId: BigString, userId: BigString) => string;
    GUILD_MEMBERS: (guildId: BigString, options?: ListGuildMembers) => string;
    GUILD_MEMBER_ROLE: (guildId: BigString, memberId: BigString, roleId: BigString) => string;
    GUILD_MEMBERS_SEARCH: (guildId: BigString, query: string, options?: {
        limit?: number;
    }) => string;
    GUILD_PRUNE: (guildId: BigString, options?: GetGuildPruneCountQuery) => string;
    GUILD_REGIONS: (guildId: BigString) => string;
    GUILD_ROLE: (guildId: BigString, roleId: BigString) => string;
    GUILD_ROLES: (guildId: BigString) => string;
    GUILD_SPLASH: (guildId: BigString, icon: string) => string;
    GUILD_VANITY_URL: (guildId: BigString) => string;
    GUILD_WEBHOOKS: (guildId: BigString) => string;
    TEMPLATE: (code: string) => string;
    GUILD_TEMPLATE: (guildId: BigString, code: string) => string;
    GUILD_TEMPLATES: (guildId: BigString) => string;
    GUILD_PREVIEW: (guildId: BigString) => string;
    UPDATE_VOICE_STATE: (guildId: BigString, userId?: BigString) => string;
    GUILD_WELCOME_SCREEN: (guildId: BigString) => string;
    GUILD_SCHEDULED_EVENTS: (guildId: BigString, withUserCount?: boolean) => string;
    GUILD_SCHEDULED_EVENT: (guildId: BigString, eventId: BigString, withUserCount?: boolean) => string;
    GUILD_SCHEDULED_EVENT_USERS: (guildId: BigString, eventId: BigString, options?: GetScheduledEventUsers) => string;
    GUILD_MFA_LEVEL: (guildId: BigString) => string;
    VOICE_REGIONS: () => string;
    INVITE: (inviteCode: string, options?: GetInvite) => string;
    WEBHOOK: (webhookId: BigString, token: string, options?: {
        wait?: boolean;
        threadId?: BigString;
    }) => string;
    WEBHOOK_ID: (webhookId: BigString) => string;
    WEBHOOK_MESSAGE: (webhookId: BigString, token: string, messageId: BigString, options?: {
        threadId?: BigString;
    }) => string;
    WEBHOOK_MESSAGE_ORIGINAL: (webhookId: BigString, token: string, options?: {
        threadId?: BigString;
    }) => string;
    WEBHOOK_SLACK: (webhookId: BigString, token: string) => string;
    WEBHOOK_GITHUB: (webhookId: BigString, token: string) => string;
    COMMANDS: (applicationId: BigString) => string;
    COMMANDS_GUILD: (applicationId: BigString, guildId: BigString) => string;
    COMMANDS_PERMISSIONS: (applicationId: BigString, guildId: BigString) => string;
    COMMANDS_PERMISSION: (applicationId: BigString, guildId: BigString, commandId: BigString) => string;
    COMMANDS_ID: (applicationId: BigString, commandId: BigString, withLocalizations?: boolean) => string;
    COMMANDS_GUILD_ID: (applicationId: BigString, guildId: BigString, commandId: BigString, withLocalizations?: boolean) => string;
    INTERACTION_ID_TOKEN: (interactionId: BigString, token: string) => string;
    INTERACTION_ORIGINAL_ID_TOKEN: (interactionId: BigString, token: string) => string;
    INTERACTION_ID_TOKEN_MESSAGE_ID: (applicationId: BigString, token: string, messageId: BigString) => string;
    USER: (userId: BigString) => string;
    USER_BOT: () => string;
    USER_GUILDS: () => string;
    USER_AVATAR: (userId: BigString, icon: string) => string;
    USER_DEFAULT_AVATAR: (icon: number) => string;
    USER_DM: () => string;
    USER_CONNECTIONS: () => string;
    USER_NICK: (guildId: BigString) => string;
    DISCOVERY_CATEGORIES: () => string;
    DISCOVERY_VALID_TERM: (term: string) => string;
    DISCOVERY_METADATA: (guildId: BigString) => string;
    DISCOVERY_SUBCATEGORY: (guildId: BigString, categoryId: number) => string;
    OAUTH2_APPLICATION: () => string;
    STAGE_INSTANCES: () => string;
    STAGE_INSTANCE: (channelId: BigString) => string;
    NITRO_STICKER_PACKS: () => string;
    STICKER: (stickerId: bigint) => string;
    GUILD_STICKERS: (guildId: bigint) => string;
    GUILD_STICKER: (guildId: bigint, stickerId: bigint) => string;
};
