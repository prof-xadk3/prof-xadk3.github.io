import type { Bot } from "../../../bot.js";
import { BigString } from "../../../types/shared.js";
import { ActiveThreads } from "./getActiveThreads.js";
/**
 * Gets the list of public archived threads for a channel.
 *
 * @param bot - The bot instance to use to make the request.
 * @param channelId - The ID of the channel to get the archived threads for.
 * @param options - The parameters for the fetching of threads.
 * @returns An instance of {@link ArchivedThreads}.
 *
 * @remarks
 * Requires the `READ_MESSAGE_HISTORY` permission.
 *
 * If called on a channel of type {@link ChannelTypes.GuildText}, returns threads of type {@link ChannelTypes.GuildPublicThread}.
 * If called on a channel of type {@link ChannelTypes.GuildNews}, returns threads of type {@link ChannelTypes.GuildNewsThread}.
 *
 * Threads are ordered by the `archive_timestamp` property included in the metadata of the object in descending order.
 *
 * @see {@link https://discord.com/developers/docs/resources/channel#list-public-archived-threads}
 */
export declare function getPublicArchivedThreads(bot: Bot, channelId: BigString, options?: ListArchivedThreads): Promise<ArchivedThreads>;
/** https://discord.com/developers/docs/resources/channel#list-public-archived-threads-query-string-params */
export interface ListArchivedThreads {
    /** Returns threads before this timestamp */
    before?: number;
    /** Optional maximum number of threads to return */
    limit?: number;
}
export declare type ArchivedThreads = ActiveThreads & {
    hasMore: boolean;
};
