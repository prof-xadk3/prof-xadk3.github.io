"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteChannel = void 0;
const deps_js_1 = require("../../deps.js");
const permissions_js_1 = require("../permissions.js");
function deleteChannel(bot) {
    const deleteChannel = bot.helpers.deleteChannel;
    bot.helpers.deleteChannel = async function (channelId, reason) {
        const channel = bot.channels.get(bot.transformers.snowflake(channelId));
        if (channel?.guildId) {
            const guild = bot.guilds.get(channel.guildId);
            if (!guild)
                throw new Error("GUILD_NOT_FOUND");
            if (guild.rulesChannelId === channelId)
                throw new Error("RULES_CHANNEL_CANNOT_BE_DELETED");
            if (guild.publicUpdatesChannelId === channelId)
                throw new Error("UPDATES_CHANNEL_CANNOT_BE_DELETED");
            const perms = ["VIEW_CHANNEL"];
            const isThread = [deps_js_1.ChannelTypes.AnnouncementThread, deps_js_1.ChannelTypes.PublicThread, deps_js_1.ChannelTypes.PrivateThread]
                .includes(channel.type);
            const isVoice = [deps_js_1.ChannelTypes.GuildVoice, deps_js_1.ChannelTypes.GuildStageVoice].includes(channel.type);
            if (isThread)
                perms.push("MANAGE_THREADS");
            else
                perms.push("MANAGE_CHANNELS");
            if (isVoice)
                perms.push("CONNECT");
            (0, permissions_js_1.requireBotChannelPermissions)(bot, bot.transformers.snowflake(channelId), perms);
        }
        return await deleteChannel(channelId, reason);
    };
}
exports.deleteChannel = deleteChannel;
