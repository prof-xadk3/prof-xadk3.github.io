"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createGuildApplicationCommand = void 0;
const deps_js_1 = require("../../../deps.js");
const applicationCommandOptions_js_1 = require("../../applicationCommandOptions.js");
function createGuildApplicationCommand(bot) {
    const createGuildApplicationCommand = bot.helpers.createGuildApplicationCommand;
    bot.helpers.createGuildApplicationCommand = async function (options, guildId) {
        const isChatInput = !options.type || options.type === deps_js_1.ApplicationCommandTypes.ChatInput;
        if (!options.name)
            throw new Error("A name is required to create a options.");
        if (isChatInput) {
            if (!deps_js_1.SLASH_COMMANDS_NAME_REGEX.test(options.name)) {
                throw new Error("The name of the slash command did not match the required regex.");
            }
            // Only slash need to be lowercase
            options.name = options.name.toLowerCase();
            // Slash commands require description
            if (!options.description)
                throw new Error("Slash commands require some form of a description be provided.");
            else if (!bot.utils.validateLength(options.description, { min: 1, max: 100 })) {
                throw new Error("Application command descriptions must be between 1 and 100 characters.");
            }
            if (options.options?.length) {
                if (options.options.length > 25)
                    throw new Error("Only 25 options are allowed to be provided.");
                options.options = (0, applicationCommandOptions_js_1.validateApplicationCommandOptions)(bot, options.options);
            }
        }
        else {
            if (!deps_js_1.CONTEXT_MENU_COMMANDS_NAME_REGEX.test(options.name)) {
                throw new Error("The name of the context menu did not match the required regex.");
            }
        }
        return await createGuildApplicationCommand(options, guildId);
    };
}
exports.createGuildApplicationCommand = createGuildApplicationCommand;
