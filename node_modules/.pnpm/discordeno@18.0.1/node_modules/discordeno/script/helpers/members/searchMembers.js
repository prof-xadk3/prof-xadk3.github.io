"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.searchMembers = void 0;
const collection_js_1 = require("../../util/collection.js");
/**
 * Gets the list of members whose usernames or nicknames start with a provided string.
 *
 * @param bot - The bot instance to use to make the request.
 * @param guildId - The ID of the guild to search in.
 * @param query - The string to match usernames or nicknames against.
 * @param options - The parameters for searching through the members.
 * @returns A collection of {@link Member} objects assorted by user ID.
 *
 * @see {@link https://discord.com/developers/docs/resources/guild#search-guild-members}
 */
async function searchMembers(bot, guildId, query, options) {
    if (options?.limit) {
        if (options.limit < 1)
            throw new Error(bot.constants.Errors.MEMBER_SEARCH_LIMIT_TOO_LOW);
        if (options.limit > 1000) {
            throw new Error(bot.constants.Errors.MEMBER_SEARCH_LIMIT_TOO_HIGH);
        }
    }
    const results = await bot.rest.runMethod(bot.rest, "GET", bot.constants.routes.GUILD_MEMBERS_SEARCH(guildId, query, options));
    const id = bot.transformers.snowflake(guildId);
    return new collection_js_1.Collection(results.map((result) => {
        const member = bot.transformers.member(bot, result, id, bot.transformers.snowflake(result.user.id));
        return [member.id, member];
    }));
}
exports.searchMembers = searchMembers;
