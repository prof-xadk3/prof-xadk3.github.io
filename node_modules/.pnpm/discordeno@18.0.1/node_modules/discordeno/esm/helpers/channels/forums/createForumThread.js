/**
 * Creates a new thread in a forum channel, and sends a message within the created thread.
 *
 * @param bot - The bot instance to use to make the request.
 * @param channelId - The ID of the forum channel to create the thread within.
 * @param options - The parameters for the creation of the thread.
 * @returns An instance of {@link Channel} with a nested {@link Message} object.
 *
 * @remarks
 * Requires the `CREATE_MESSAGES` permission.
 *
 * Fires a _Thread Create_ gateway event.
 * Fires a _Message Create_ gateway event.
 *
 * @see {@link https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel}
 *
 * @experimental
 */
export async function createForumThread(bot, channelId, options) {
    const result = await bot.rest.runMethod(bot.rest, "POST", bot.constants.routes.FORUM_START(channelId), {
        name: options.name,
        auto_archive_duration: options.autoArchiveDuration,
        rate_limit_per_user: options.rateLimitPerUser,
        reason: options.reason,
        content: options.content,
        embeds: options.embeds?.map((embed) => bot.transformers.reverse.embed(bot, embed)),
        allowed_mentions: options.allowedMentions
            ? {
                parse: options.allowedMentions?.parse,
                roles: options.allowedMentions?.roles?.map((id) => id.toString()),
                users: options.allowedMentions?.users?.map((id) => id.toString()),
                replied_user: options.allowedMentions?.repliedUser,
            }
            : undefined,
        file: options.file,
        components: options.components?.map((component) => bot.transformers.reverse.component(bot, component)),
    });
    return bot.transformers.channel(bot, { channel: result, guildId: bot.transformers.snowflake(result.guild_id) });
}
