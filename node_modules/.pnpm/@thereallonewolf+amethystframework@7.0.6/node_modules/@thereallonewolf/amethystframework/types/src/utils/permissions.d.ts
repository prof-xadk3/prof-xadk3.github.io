import { Channel, Guild, Member, OverwriteReadable, PermissionStrings, Role } from '../../deps.js';
import { AmethystBot } from '../interfaces/bot.js';
/** Calculates the permissions this member has in the given guild */
export declare function calculateBasePermissions(bot: AmethystBot, guild: Guild, member: Member): bigint;
/** Calculates the permissions this member has for the given Channel */
export declare function calculateChannelOverwrites(bot: AmethystBot, channelOrId: bigint | Channel, memberOrId: bigint | Member): Promise<bigint>;
/** Checks if the given permission bits are matching the given permissions. `ADMINISTRATOR` always returns `true` */
export declare function validatePermissions(permissionBits: bigint, permissions: PermissionStrings[]): boolean;
/** Checks if the given member has these permissions in the given guild */
export declare function hasGuildPermissions(bot: AmethystBot, guild: Guild, member: Member, permissions: PermissionStrings[]): boolean;
/** Checks if the bot has these permissions in the given guild */
export declare function botHasGuildPermissions(bot: AmethystBot, guild: Guild, permissions: PermissionStrings[]): Promise<boolean>;
/** Checks if the given member has these permissions for the given channel */
export declare function hasChannelPermissions(bot: AmethystBot, channel: Channel | bigint, member: Member | bigint, permissions: PermissionStrings[]): Promise<boolean>;
/** Checks if the bot has these permissions f0r the given channel */
export declare function botHasChannelPermissions(bot: AmethystBot, channel: bigint | Channel, permissions: PermissionStrings[]): Promise<boolean>;
/** Returns the permissions that are not in the given permissionBits */
export declare function missingPermissions(permissionBits: bigint, permissions: PermissionStrings[]): ("CREATE_INSTANT_INVITE" | "KICK_MEMBERS" | "BAN_MEMBERS" | "ADMINISTRATOR" | "MANAGE_CHANNELS" | "MANAGE_GUILD" | "ADD_REACTIONS" | "VIEW_AUDIT_LOG" | "PRIORITY_SPEAKER" | "STREAM" | "VIEW_CHANNEL" | "SEND_MESSAGES" | "SEND_TTS_MESSAGES" | "MANAGE_MESSAGES" | "EMBED_LINKS" | "ATTACH_FILES" | "READ_MESSAGE_HISTORY" | "MENTION_EVERYONE" | "USE_EXTERNAL_EMOJIS" | "VIEW_GUILD_INSIGHTS" | "CONNECT" | "SPEAK" | "MUTE_MEMBERS" | "DEAFEN_MEMBERS" | "MOVE_MEMBERS" | "USE_VAD" | "CHANGE_NICKNAME" | "MANAGE_NICKNAMES" | "MANAGE_ROLES" | "MANAGE_WEBHOOKS" | "MANAGE_EMOJIS_AND_STICKERS" | "USE_SLASH_COMMANDS" | "REQUEST_TO_SPEAK" | "MANAGE_EVENTS" | "MANAGE_THREADS" | "CREATE_PUBLIC_THREADS" | "CREATE_PRIVATE_THREADS" | "USE_EXTERNAL_STICKERS" | "SEND_MESSAGES_IN_THREADS" | "USE_EMBEDDED_ACTIVITIES" | "MODERATE_MEMBERS")[];
/** Get the missing Guild permissions this member has */
export declare function getMissingGuildPermissions(bot: AmethystBot, guild: Guild, member: Member, permissions: PermissionStrings[]): ("CREATE_INSTANT_INVITE" | "KICK_MEMBERS" | "BAN_MEMBERS" | "ADMINISTRATOR" | "MANAGE_CHANNELS" | "MANAGE_GUILD" | "ADD_REACTIONS" | "VIEW_AUDIT_LOG" | "PRIORITY_SPEAKER" | "STREAM" | "VIEW_CHANNEL" | "SEND_MESSAGES" | "SEND_TTS_MESSAGES" | "MANAGE_MESSAGES" | "EMBED_LINKS" | "ATTACH_FILES" | "READ_MESSAGE_HISTORY" | "MENTION_EVERYONE" | "USE_EXTERNAL_EMOJIS" | "VIEW_GUILD_INSIGHTS" | "CONNECT" | "SPEAK" | "MUTE_MEMBERS" | "DEAFEN_MEMBERS" | "MOVE_MEMBERS" | "USE_VAD" | "CHANGE_NICKNAME" | "MANAGE_NICKNAMES" | "MANAGE_ROLES" | "MANAGE_WEBHOOKS" | "MANAGE_EMOJIS_AND_STICKERS" | "USE_SLASH_COMMANDS" | "REQUEST_TO_SPEAK" | "MANAGE_EVENTS" | "MANAGE_THREADS" | "CREATE_PUBLIC_THREADS" | "CREATE_PRIVATE_THREADS" | "USE_EXTERNAL_STICKERS" | "SEND_MESSAGES_IN_THREADS" | "USE_EMBEDDED_ACTIVITIES" | "MODERATE_MEMBERS")[];
/** Get the missing Channel permissions this member has */
export declare function getMissingChannelPermissions(bot: AmethystBot, channel: bigint | Channel, member: bigint | Member, permissions: PermissionStrings[]): Promise<("CREATE_INSTANT_INVITE" | "KICK_MEMBERS" | "BAN_MEMBERS" | "ADMINISTRATOR" | "MANAGE_CHANNELS" | "MANAGE_GUILD" | "ADD_REACTIONS" | "VIEW_AUDIT_LOG" | "PRIORITY_SPEAKER" | "STREAM" | "VIEW_CHANNEL" | "SEND_MESSAGES" | "SEND_TTS_MESSAGES" | "MANAGE_MESSAGES" | "EMBED_LINKS" | "ATTACH_FILES" | "READ_MESSAGE_HISTORY" | "MENTION_EVERYONE" | "USE_EXTERNAL_EMOJIS" | "VIEW_GUILD_INSIGHTS" | "CONNECT" | "SPEAK" | "MUTE_MEMBERS" | "DEAFEN_MEMBERS" | "MOVE_MEMBERS" | "USE_VAD" | "CHANGE_NICKNAME" | "MANAGE_NICKNAMES" | "MANAGE_ROLES" | "MANAGE_WEBHOOKS" | "MANAGE_EMOJIS_AND_STICKERS" | "USE_SLASH_COMMANDS" | "REQUEST_TO_SPEAK" | "MANAGE_EVENTS" | "MANAGE_THREADS" | "CREATE_PUBLIC_THREADS" | "CREATE_PRIVATE_THREADS" | "USE_EXTERNAL_STICKERS" | "SEND_MESSAGES_IN_THREADS" | "USE_EMBEDDED_ACTIVITIES" | "MODERATE_MEMBERS")[]>;
/** Throws an error if this member has not all of the given permissions */
export declare function requireGuildPermissions(bot: AmethystBot, guild: Guild, member: Member, permissions: PermissionStrings[]): void;
/** Throws an error if the bot does not have all permissions */
export declare function requireBotGuildPermissions(bot: AmethystBot, guild: Guild, permissions: PermissionStrings[]): Promise<void>;
/** Throws an error if this member has not all of the given permissions */
export declare function requireChannelPermissions(bot: AmethystBot, channel: bigint | Channel, member: bigint | Member, permissions: PermissionStrings[]): Promise<void>;
/** Throws an error if the bot has not all of the given channel permissions */
export declare function requireBotChannelPermissions(bot: AmethystBot, channel: bigint | Channel, permissions: PermissionStrings[]): Promise<void>;
/** Internal function to check if the bot has the permissions to set these overwrites */
export declare function requireOverwritePermissions(bot: AmethystBot, guildOrId: Guild, overwrites: OverwriteReadable[]): Promise<void>;
/** Gets the highest role from the member in this guild */
export declare function highestRole(bot: AmethystBot, guildOrId: bigint | Guild, memberOrId: bigint | Member): Promise<Role>;
/** Checks if the first role is higher than the second role */
export declare function higherRolePosition(bot: AmethystBot, guildOrId: bigint | Guild, roleId: bigint, otherRoleId: bigint): Promise<boolean>;
/** Checks if the member has a higher position than the given role */
export declare function isHigherPosition(bot: AmethystBot, guildOrId: bigint | Guild, memberId: bigint, compareRoleId: bigint): Promise<boolean>;
/** Checks if a channel overwrite for a user id or a role id has permission in this channel */
export declare function channelOverwriteHasPermission(guildId: bigint, id: bigint, overwrites: bigint[], permissions: PermissionStrings[]): boolean;
