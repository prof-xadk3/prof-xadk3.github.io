import type { Bot } from "../../bot.js";
import { ApplicationCommand } from "../../transformers/applicationCommand.js";
import { AuditLogEntry } from "../../transformers/auditLogEntry.js";
import { AutoModerationRule } from "../../transformers/automodRule.js";
import { Channel } from "../../transformers/channel.js";
import { Integration } from "../../transformers/integration.js";
import { User } from "../../transformers/member.js";
import { ScheduledEvent } from "../../transformers/scheduledEvent.js";
import { Webhook } from "../../transformers/webhook.js";
import { AuditLogEvents, BigString } from "../../types/shared.js";
export declare type AuditLog = {
    auditLogEntries: AuditLogEntry[];
    autoModerationRules?: AutoModerationRule[];
    guildScheduledEvents?: ScheduledEvent[];
    integrations: Partial<Omit<Integration, "guildId">>[];
    threads: Channel[];
    users: User[];
    webhooks: Webhook[];
    applicationCommands: ApplicationCommand[];
};
/**
 * Gets a guild's audit log.
 *
 * @param bot - The bot instance to use to make the request.
 * @param guildId - The ID of the guild to get the audit log of.
 * @param options - The parameters for the fetching of the audit log.
 * @returns An instance of {@link AuditLog}.
 *
 * @remarks
 * Requires the `VIEW_AUDIT_LOG` permission.
 *
 * @see {@link https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log}
 */
export declare function getAuditLog(bot: Bot, guildId: BigString, options?: GetGuildAuditLog): Promise<AuditLog>;
/** https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log-query-string-parameters */
export interface GetGuildAuditLog {
    /** Entries from a specific user ID */
    userId?: BigString | string;
    /** Entries for a specific audit log event */
    actionType?: AuditLogEvents;
    /** Entries that preceded a specific audit log entry ID */
    before?: BigString | string;
    /** Maximum number of entries (between 1-100) to return, defaults to 50 */
    limit?: number;
}
