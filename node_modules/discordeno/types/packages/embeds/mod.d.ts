import "../../_dnt.polyfills.js";
import { DiscordEmbed, Embed, User } from "./deps.js";
export declare const embedLimits: {
    title: number;
    description: number;
    fieldName: number;
    fieldValue: number;
    footerText: number;
    authorName: number;
    fields: number;
    total: number;
};
export declare class Embeds extends Array<Embed> {
    /** The amount of characters in the embed. */
    currentTotal: number;
    /** Whether the limits should be enforced or not. */
    enforceLimits: boolean;
    /** If a file is attached to the message it will be added here. */
    file?: EmbedFile;
    constructor(enforceLimits?: boolean);
    fitData(data: string, max: number): string;
    setAuthor(name: string, iconUrl?: string | User, url?: string): this;
    setColor(color: string): this;
    setDescription(description: string | string[]): this;
    addField(name: string, value: string, inline?: boolean): this;
    addBlankField(inline?: boolean): this;
    attachFile(file: unknown, name: string): this;
    setFooter(text: string, icon?: string): this;
    setImage(url: string | User): this;
    setTimestamp(time?: number): this;
    setTitle(title: string, url?: string): this;
    setURL(url: string): this;
    setThumbnail(url: string): this;
    addEmbed(embed?: Embed): this;
    /** Get the last DiscordEmbed, if there is no it will create one */
    getLastEmbed(): Embed;
    setFromJson(json: Record<string, any>): this;
    setFromEmbed(embed: Embed): this;
    showEmbedCode(): DiscordEmbed[];
}
export interface EmbedFile {
    blob: unknown;
    name: string;
}
export default Embeds;
