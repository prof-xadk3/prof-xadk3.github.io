import { AmethystBot, AmethystCollection } from '../../mod.js';
export declare class AmethystEventHandler {
    client: AmethystBot;
    events: AmethystCollection<string, ((...args: any[]) => unknown)[]>;
    constructor(client: AmethystBot);
    /**
     * If the event exists, add the listener to the event, otherwise create the event and add the
     * listener to it.
     * @param {string} event - string - The name of the event.
     * @param listener - (...args: any[]) => unknown
     * @returns The instance of the class.
     */
    on(event: string, listener: (...args: any[]) => unknown): this;
    /**
     * For each event in the events map, if the event name matches the event passed in, then call each
     * listener function with the arguments passed in
     * @param {string} event - string - The name of the event to dispatch.
     * @param {any[]} args - any[] - This is an array of any type. This is used to pass in any arguments
     * that you want to pass to the event listener.
     */
    dispatch(event: string, ...args: any[]): void;
}
