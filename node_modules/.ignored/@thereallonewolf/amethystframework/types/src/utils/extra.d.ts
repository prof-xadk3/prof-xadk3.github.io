import { Bot } from '../../deps.js';
import { BotWithProxyCache, ProxyCacheTypes } from '../cache-with-proxy/mod.js';
import { CommandClass } from '../classes/Command.js';
import { Context } from '../classes/Context.js';
import { AmethystBotOptions } from '../interfaces/AmethystBotOptions.js';
import { AmethystBot } from '../interfaces/bot.js';
import { AmethystError } from '../interfaces/errors.js';
import { AmethystTask } from '../interfaces/tasks.js';
/**
 * Create a task.
 *
 * @param bot The bot instance.
 * @param task The task to create.
 */
export declare function createTask(bot: AmethystBot, task: AmethystTask): void;
/**
 * Clears all running tasks
 */
export declare function clearTasks(bot: AmethystBot): void;
/**Create a custom inhibitor*/
export declare function createInhibitor<T extends CommandClass = CommandClass>(bot: AmethystBot, name: string, inhibitor: (bot: AmethystBot, command: T, options?: Context) => Promise<true | AmethystError>): void;
/**Delete an unwanted inhibitor*/
export declare function deleteInhibitor(bot: AmethystBot, name: string): void;
/**
 * It takes a bot and returns a bot with the Amethyst plugin enabled.
 * @param {B} rawBot - The bot object that you're using.
 * @param {AmethystBotOptions} [options] - AmethystBotOptions
 */
export declare function enableAmethystPlugin(rawBot: BotWithProxyCache<ProxyCacheTypes, Bot>, options?: AmethystBotOptions): AmethystBot<Omit<BotWithProxyCache<ProxyCacheTypes<true>, Bot>, "events">>;
