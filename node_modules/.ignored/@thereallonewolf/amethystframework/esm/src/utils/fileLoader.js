import * as dntShim from "../../_dnt.shims.js";
export async function* load(dir) {
    for await (const file of dntShim.Deno.readDir(dir)) {
        if (file.isDirectory) {
            yield* load(`./${dir}/${file.name}`);
            continue;
        }
        const module = await import(`file://${dntShim.Deno.realPathSync(`${dir}/${file.name}`)}`);
        yield module;
    }
}
export async function loadEvents(bot, dir) {
    const eventFiles = load(dir);
    for await (const eventFile of eventFiles) {
        if (eventFile.default) {
            bot.on(eventFile.default.name, eventFile.default.execute);
        }
    }
}
// Just for test
// Soon enough there will be just 1 command type that has support for both slash and message command
export async function loadCommands(bot, dir) {
    const commandFiles = load(dir);
    for await (const commandFile of commandFiles) {
        if (commandFile.default) {
            bot.amethystUtils.createCommand(commandFile.default);
        }
    }
}
export async function loadInhibitors(bot, dir) {
    const inhibitorFiles = load(dir);
    for await (const inhibitorFile of inhibitorFiles) {
        if (inhibitorFile.default) {
            bot.inhibitors.set(inhibitorFile.default.name, inhibitorFile.default.execute);
        }
    }
}
